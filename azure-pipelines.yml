# OpenUPM azure pipelines
name: $(Build.BuildId)-$(Date:yyyyMMdd)$(Rev:.r)

trigger: none

variables:
  # repo_url:
  # repo_branch:
  # package_name:
  # package_ver:
  repodir: repo
  registry_addr: http://package.openupm.com
  dist_tag: latest

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: |
    echo repodir: $(repodir)
    echo registry_addr: $(registry_addr)
    echo repo_url: $(repo_url)
    echo repo_branch: $(repo_branch)
    echo package_name: $(package_name)
    echo package_ver: $(package_ver)
  displayName: 'Print environment'

- powershell: |
    exit 1
  condition: and(succeeded(), eq(variables['repo_url'], ''))
  displayName: 'Check variable repo_url'

- powershell: |
    exit 1
  condition: and(succeeded(), eq(variables['repo_branch'], ''))
  displayName: 'Check variable repo_branch'

- powershell: |
    exit 1
  condition: and(succeeded(), eq(variables['package_name'], ''))
  displayName: 'Check variable package_name'

- powershell: |
    exit 1
  condition: and(succeeded(), eq(variables['package_ver'], ''))
  displayName: 'Check variable package_ver'

- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- task: Npm@1
  inputs:
    command: install
  displayName: 'Install dependencies'

- script: |
    latest_ver=`npm --registry=$(registry_addr) show $(package_name) version` || latest_ver=0.0.0
    echo latest_ver=$latest_ver
    echo package_ver=$(package_ver)
    dist_tag=`node get-dist-tag.js $(package_ver) $latest_ver`
    echo dist_tag=$dist_tag
    echo "##vso[task.setvariable variable=dist_tag;]$dist_tag"
  displayName: 'Update variable dist_tag'

- script: |
    echo dist_tag=$(dist_tag)
  displayName: 'Print variable dist_tag'

- task: DeleteFiles@1
  inputs:
    contents: $(repodir)
  displayName: 'Clean target folder'

- script: |
    git clone --depth 1 --branch $(repo_branch) $(repo_url) $(repodir)
    cd $(repodir)
  displayName: 'Clone target repository'

- task: Npm@1
  inputs:
    command: custom
    workingDir: $(repodir)
    customCommand: 'publish --tag=$(dist_tag) --registry=$(registry_addr)'
    customEndpoint: openupm
  displayName: 'Publish to OpenUPM with tag'
